diff --ignore-all-space -urN orig/blackbox_decode.c src/blackbox_decode.c
--- orig/blackbox_decode.c	2018-07-18 22:44:49.302942658 +0100
+++ src/blackbox_decode.c	2018-07-21 13:01:43.187878359 +0100
@@ -178,20 +178,37 @@
     switch (unit) {
         case UNIT_VOLTS:
             if (fieldIndex == log->mainFieldIndexes.vbatLatest) {
+                if(log->sysConfig.use_new_vbat)
+                    fprintf(file, "%.3f", (uint16_t)fieldValue / 100.0);
+                else
                 fprintf(file, "%.3f", flightLogVbatADCToMillivolts(log, (uint16_t)fieldValue) / 1000.0);
                 return true;
             }
         break;
         case UNIT_MILLIVOLTS:
             if (fieldIndex == log->mainFieldIndexes.vbatLatest) {
+                if(log->sysConfig.use_new_vbat)
+                    fprintf(file, "%u", (uint16_t)fieldValue * 10);
+                else
                 fprintf(file, "%u", flightLogVbatADCToMillivolts(log, (uint16_t)fieldValue));
                 return true;
             }
         break;
         case UNIT_AMPS:
+            if (fieldIndex == log->mainFieldIndexes.amperageLatest) {
+                if(log->sysConfig.use_new_vbat)
+                    fprintf(file, "%.3f", (uint16_t)fieldValue / 100.0);
+                else
+                    fprintfMilliampsInUnit(file, (uint16_t)fieldValue, unit);
+                return true;
+            }
+            break;
         case UNIT_MILLIAMPS:
             if (fieldIndex == log->mainFieldIndexes.amperageLatest) {
-                fprintfMilliampsInUnit(file, flightLogAmperageADCToMilliamps(log, (uint16_t)fieldValue), unit);
+                if(log->sysConfig.use_new_vbat)
+                    fprintf(file, "%.3f", (uint16_t)fieldValue * 10.0);
+                else
+                    fprintfMilliampsInUnit(file, (uint16_t)fieldValue, unit);
                 return true;
             }
         break;
diff --ignore-all-space -urN orig/blackbox_fielddefs.c src/blackbox_fielddefs.c
--- orig/blackbox_fielddefs.c	2018-07-18 22:44:49.302942658 +0100
+++ src/blackbox_fielddefs.c	2018-05-28 19:59:22.404989396 +0100
@@ -24,6 +24,10 @@
 const char * const FLIGHT_LOG_FAILSAFE_PHASE_NAME[] = {
     "IDLE",
     "RX_LOSS_DETECTED",
+    "RX_LOSS_IDLE",
+    "RETURN_TO_HOME",
     "LANDING",
-    "LANDED"
+    "LANDED",
+    "RX_LOSS_MONITORING",
+    "RX_LOSS_RECOVERED"
 };
diff --ignore-all-space -urN orig/blackbox_fielddefs.h src/blackbox_fielddefs.h
--- orig/blackbox_fielddefs.h	2018-07-18 22:44:49.302942658 +0100
+++ src/blackbox_fielddefs.h	2018-05-28 19:59:22.538319520 +0100
@@ -127,13 +127,17 @@
 typedef enum {
     FAILSAFE_IDLE = 0,
     FAILSAFE_RX_LOSS_DETECTED,
+    FAILSAFE_RX_LOSS_IDLE,
+    FAILSAFE_RETURN_TO_HOME,
     FAILSAFE_LANDING,
-    FAILSAFE_LANDED
+    FAILSAFE_LANDED,
+    FAILSAFE_RX_LOSS_MONITORING,
+    FAILSAFE_RX_LOSS_RECOVERED
 } failsafePhase_e;
 
 extern const char * const FLIGHT_LOG_FAILSAFE_PHASE_NAME[];
 
-#define FLIGHT_LOG_FAILSAFE_PHASE_COUNT 4
+#define FLIGHT_LOG_FAILSAFE_PHASE_COUNT 8
 
 typedef enum FlightLogEvent {
     FLIGHT_LOG_EVENT_SYNC_BEEP = 0,
diff --ignore-all-space -urN orig/parser.c src/parser.c
--- orig/parser.c	2018-07-18 22:44:49.306275908 +0100
+++ src/parser.c	2018-07-21 13:01:17.728518957 +0100
@@ -228,8 +228,12 @@
             log->mainFieldIndexes.servo[servoIndex] = fieldIndex;
         } else if (strcmp(fieldName, "vbatLatest") == 0) {
             log->mainFieldIndexes.vbatLatest = fieldIndex;
+        } else if (strcmp(fieldName, "vbat") == 0) {
+            log->mainFieldIndexes.vbatLatest = fieldIndex;
         } else if (strcmp(fieldName, "amperageLatest") == 0) {
             log->mainFieldIndexes.amperageLatest = fieldIndex;
+        } else if (strcmp(fieldName, "amperage") == 0) {
+            log->mainFieldIndexes.amperageLatest = fieldIndex;
         } else if (strcmp(fieldName, "BaroAlt") == 0) {
             log->mainFieldIndexes.BaroAlt = fieldIndex;
         } else if (strcmp(fieldName, "sonarRaw") == 0) {
@@ -475,6 +479,40 @@
 
 		log->sysConfig.motorOutputLow = motorOutputs[0];
 		log->sysConfig.motorOutputHigh = motorOutputs[1];
+    } else if (strcmp(fieldName, "Firmware revision") == 0) {
+        if(strncmp(fieldValue, "INAV", 4) == 0) {
+            uint8_t major=0,minor=0,micro=0;
+            char *ptr = fieldValue+5; // "INAV "
+
+            major = strtol(ptr, &ptr, 10);
+            if (ptr)
+                minor = strtol(ptr, &ptr, 10);
+            if(ptr)
+                micro = strtol(ptr, NULL, 10);
+
+            if(major > 2) // Must be new vbat code
+                log->sysConfig.use_new_vbat = 1;
+            else if (major  ==  2) // Possibly new vbat code
+            {
+                if (minor != 0 || micro != 0)
+                    log->sysConfig.use_new_vbat = 1;
+                else
+                    log->sysConfig.use_new_vbat = 2;
+            }
+        }
+    } if (strcmp(fieldName, "Firmware date") == 0 && log->sysConfig.use_new_vbat == 2) {
+        int day = atoi(fieldValue+4);
+        int yr = atoi(fieldValue+7);
+        if (yr == 2018)
+        {
+            if(strncmp(fieldValue,"Apr", 3) == 0 ||
+               strncmp(fieldValue,"May", 3) == 0 ||
+               strncmp(fieldValue,"Jun", 3) == 0 ||
+               (strncmp(fieldValue,"Jul", 3) == 0 && day < 7))
+                log->sysConfig.use_new_vbat = 0;
+            else
+                log->sysConfig.use_new_vbat = 1;
+        }
      }
 }
 
diff --ignore-all-space -urN orig/parser.h src/parser.h
--- orig/parser.h	2018-07-18 22:44:49.306275908 +0100
+++ src/parser.h	2018-07-21 12:38:14.483308673 +0100
@@ -7,7 +7,7 @@
 
 #include "blackbox_fielddefs.h"
 
-#define FLIGHT_LOG_MAX_LOGS_IN_FILE 31
+#define FLIGHT_LOG_MAX_LOGS_IN_FILE 128
 #define FLIGHT_LOG_MAX_FIELDS 128
 #define FLIGHT_LOG_MAX_FRAME_LENGTH 256
 
@@ -125,6 +125,8 @@
     uint16_t vbatref;
 
     FirmwareType firmwareType;
+
+    uint8_t use_new_vbat;
 } flightLogSysConfig_t;
 
 typedef struct flightLogFrameDef_t {
